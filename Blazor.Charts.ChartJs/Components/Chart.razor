@inject IJSRuntime JSRuntime

<canvas id="@Id"></canvas>

@code {
    public enum ChartType
    {
        Line,
        Pie,
        Bar,
        Doughnut
    }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public string[] Data { get; set; }

    [Parameter]
    public string[] BackgroundColor { get; set; }

    [Parameter]
    public string[] BorderColor { get; set; } = new[] {"rgb(255, 99, 132)"};

    [Parameter]
    public int BorderWidthNum { get; set; } = 0;

    [Parameter]
    public string[] Labels { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string DatasetTitle { get; set; } = "My First Dataset";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Here we create an anonymous type with all the options that need to be sent to Chart.js
        var config = new
        {
            Type = Type.ToString().ToLower(),
            Options = new
            {
                Responsive = true,
                //Title = new
                //{
                //    Display = true,
                //    Text = Title
                //},
                Scales = new
                {
                    YAxes = new[]
                    {
                        new { Ticks = new {
                            BeginAtZero=true
                        } }
                    }
                }
            },
            Data = new
            {
                Datasets = new[]
                {
                    new {
                            Data = Data,
                            BackgroundColor = BackgroundColor,
                            BorderColor = BorderColor,
                            BorderWidth = BorderWidthNum,
                            Label = DatasetTitle
                    }
                },
                Labels = Labels
            }
        };

        await JSRuntime.InvokeVoidAsync("setup", Id, config);
    }
}
